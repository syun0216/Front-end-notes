(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{327:function(t,e,r){t.exports=r.p+"assets/img/https.5b404b5c.png"},480:function(t,e,r){t.exports=r.p+"assets/img/tsl.a129408d.png"},481:function(t,e,r){t.exports=r.p+"assets/img/ca.c7ca2b66.png"},482:function(t,e,r){t.exports=r.p+"assets/img/tcp3.ce747272.png"},483:function(t,e,r){t.exports=r.p+"assets/img/tcp4.296a7976.png"},484:function(t,e,r){t.exports=r.p+"assets/img/性能优化.89c129bd.png"},485:function(t,e,r){t.exports=r.p+"assets/img/browser_cache.10a1eaf4.png"},632:function(t,e,r){"use strict";r.r(e);var v=r(19),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"https加密过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https加密过程"}},[t._v("#")]),t._v(" HTTPS加密过程")]),t._v(" "),v("img",{attrs:{src:r(327)}}),t._v(" "),v("ol",[v("li",[t._v("客户端发起HTTPS请求，用户在浏览器中输入一个https网址，然后连接到服务端的443端口")]),t._v(" "),v("li",[t._v("服务端配置：采取https协议的服务器必须有一套数字证书，这个证书是一对公钥和私钥")]),t._v(" "),v("li",[t._v("传送证书：这个证书就是公钥，包含（证书颁发机构、过期时间等）")]),t._v(" "),v("li",[t._v("客户端解析证书 这部分工作是由客户端的SSL/TLS来完成的，首先会验证公钥是否有效，如果发现异常，会弹出警示框。若没问题，则生成一个"),v("strong",[t._v("随机数")]),t._v("，然后用公钥对随机数进行加密")]),t._v(" "),v("li",[t._v("传输加密信息：这部分传送的是用证书加密后的随机值")]),t._v(" "),v("li",[t._v("服务端解密信息，服务端用私钥解密后，得到客户传过来的随机值，然后把内容通过该随机值进行对称加密，将信息和私钥通过算法混合在一起")]),t._v(" "),v("li",[t._v("传输加密后的信息")]),t._v(" "),v("li",[t._v("客户端解密信息 客户端用之前生产的私钥解密服务端传过来的信息，")])]),t._v(" "),v("h4",{attrs:{id:"tls"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tls"}},[t._v("#")]),t._v(" TLS")]),t._v(" "),v("p",[t._v("SSL发展到3.0版本后改成TLS")]),t._v(" "),v("p",[t._v("TLS主要提供的三个基本服务")]),t._v(" "),v("ul",[v("li",[t._v("加密")]),t._v(" "),v("li",[t._v("身份验证，页而已叫证书验证")]),t._v(" "),v("li",[t._v("消息完整性校验")])]),t._v(" "),v("p",[t._v("TSL协议是基于TCP协议之上的，图中第一个蓝色返回TCP握手过程，之后两次橙色的往返，可以成为TSL握手：")]),t._v(" "),v("ol",[v("li",[t._v("client1: TLS版本号+所支持加密套件列表+希望使用的TSL选项")]),t._v(" "),v("li",[t._v("Server1： 选择一个客户端的加密套件+自己的公钥+自己的证书+希望使用的TLS选项+（要求客户端证书）；")]),t._v(" "),v("li",[t._v("Client2: (自己的证书)+使用服务器公钥和协商的加密套件加密一个对称秘钥（自己生成的一个随机值）；")]),t._v(" "),v("li",[t._v("Server2: 使用私钥解密出对称秘钥（随机值）后，发送加密的Finish消息，表明完成握手")])]),t._v(" "),v("img",{attrs:{src:r(480)}}),t._v(" "),v("h4",{attrs:{id:"证书机制-证书验证"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#证书机制-证书验证"}},[t._v("#")]),t._v(" 证书机制/证书验证")]),t._v(" "),v("p",[t._v("在TSL中，我们需要证书来保证你所访问的服务器是真实的、可信的。")]),t._v(" "),v("img",{attrs:{src:r(481)}}),t._v(" "),v("ol",[v("li",[t._v("客户端获取到了站点证书，拿到了站点的公钥；")]),t._v(" "),v("li",[t._v("要验证站点可信后，才能使用其公钥，因此客户端找到其站点证书颁发者的信息")]),t._v(" "),v("li",[t._v("站点证书的颁发者验证了服务端站点是可信的，但客户端依然不清楚该颁发者是否可信")]),t._v(" "),v("li",[t._v("再往上，找到了认证了中间证书商的源头证书颁发者。由于源头证书颁发者非常少，我们浏览器之前就认识了，因此可以认为根证书颁发者是可信的")]),t._v(" "),v("li",[t._v("一路倒推，证书颁发者可信，那么它所颁发的所有站点也是可信的，最终确定了我们所访问的服务端是可信的")]),t._v(" "),v("li",[t._v("客户端使用证书的公钥，继续完成TLS的握手过程")])]),t._v(" "),v("h4",{attrs:{id:"验证策略是怎样的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#验证策略是怎样的"}},[t._v("#")]),t._v(" 验证策略是怎样的？")]),t._v(" "),v("p",[t._v("CRL和OCSP"),v("br"),t._v("\nCRL(Certificate Revocation List)既证书撤销名单。证书颁发者会提供一份已经失效证书的名单，供浏览器验证证书使用。当然这份名单是巨长无比的，浏览器不可能每次TLS都去下载，所以常用的做法是浏览器会缓存这份名单，定期做后台更新。这样虽然后台更新存在时间间隔，证书失效不实时，但一般也OK。"),v("br"),t._v("\nOCSP(Online Certicicate StatusProtocol)即 在线证书状态协议。除了离线文件，证书颁发者也会提供实时的查询接口，查询某个特定证书目前是否有效。实时查询的问题在于浏览器需要等待这个查询结束才能继续TLS握手，延迟会更大。")]),t._v(" "),v("h3",{attrs:{id:"http2和http1-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http2和http1-1"}},[t._v("#")]),t._v(" HTTP2和HTTP1.1")]),t._v(" "),v("blockquote",[v("p",[t._v("参考"),v("a",{attrs:{href:"https://juejin.im/post/5b88a4f56fb9a01a0b31a67e",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP2 详解"),v("OutboundLink")],1),t._v(" "),v("a",{attrs:{href:"https://juejin.im/entry/5981c5df518825359a2b9476",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP1.0、HTTP1.1 和 HTTP2.0 的区别"),v("OutboundLink")],1)])]),t._v(" "),v("p",[t._v("http2：")]),t._v(" "),v("ul",[v("li",[t._v("新的二进制格式(Binary Format) HTTP1.x的解析是基于文本。基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只认0和1的组合。基于这种考虑HTTP2.0的协议解析决定采用二进制格式，实现方便且健壮。")]),t._v(" "),v("li",[t._v("多路复用(MultiPlexing) 即连接共享，即每一个request都是是用作连接共享机制的。一个request对应一个id，这样一个连接上可以有多个request，每个连接的request可以随机的混杂在一起，接收方可以根据request的 id将request再归属到各自不同的服务端请求里面。")]),t._v(" "),v("li",[t._v("header压缩，如上文中所言，对前面提到过HTTP1.x的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。")]),t._v(" "),v("li",[t._v("服务端推送（server push），同SPDY一样，HTTP2.0也具有server push功能。")])]),t._v(" "),v("p",[t._v("HTTP1.1存在的问题")]),t._v(" "),v("ol",[v("li",[t._v("TCP连接数限制")]),t._v(" "),v("li",[t._v("线头阻塞")]),t._v(" "),v("li",[t._v("Header内容过多")])]),t._v(" "),v("h3",{attrs:{id:"三次握手和四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手和四次挥手"}},[t._v("#")]),t._v(" 三次握手和四次挥手")]),t._v(" "),v("h2",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),v("img",{attrs:{src:r(482)}})]),t._v(" "),v("img",{attrs:{src:r(483)}}),t._v(" "),v("h3",{attrs:{id:"输入url-到页面展示发生了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#输入url-到页面展示发生了什么"}},[t._v("#")]),t._v(" 输入URL 到页面展示发生了什么")]),t._v(" "),v("blockquote",[v("p",[t._v("参考："),v("a",{attrs:{href:"https://juejin.im/post/5b148a2ce51d4506965908d2",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入URL到页面展示，你想知道些什么？"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("URL输入")]),t._v(" "),v("li",[t._v("DNS解析")]),t._v(" "),v("li",[t._v("TCP连接")]),t._v(" "),v("li",[t._v("发送HTTP请求")]),t._v(" "),v("li",[t._v("服务器处理请求")]),t._v(" "),v("li",[t._v("服务器响应请求")]),t._v(" "),v("li",[t._v("浏览器解析渲染页面")]),t._v(" "),v("li",[t._v("连接结束")])]),t._v(" "),v("h3",{attrs:{id:"性能优化策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能优化策略"}},[t._v("#")]),t._v(" 性能优化策略")]),t._v(" "),v("blockquote",[v("p",[t._v("参考"),v("a",{attrs:{href:"https://juejin.im/post/5a966bd16fb9a0635172a50a",target:"_blank",rel:"noopener noreferrer"}},[t._v("2018前端性能优化清单"),v("OutboundLink")],1),t._v(" "),v("a",{attrs:{href:"https://juejin.im/post/5dddf0a06fb9a0717b5fce15",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端性能优化总结"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("图片优化：webp, 图片懒加载")]),t._v(" "),v("li",[t._v("合理使用缓存：service worker")]),t._v(" "),v("li",[t._v("webpack优化：按需加载、公共代码提取")]),t._v(" "),v("li",[t._v("nginx优化： 使用gzip")]),t._v(" "),v("li",[t._v("优化网络链接")]),t._v(" "),v("li",[t._v("体验优化：骨架屏、服务端渲染")])]),t._v(" "),v("img",{attrs:{src:r(484)}}),t._v(" "),v("h3",{attrs:{id:"浏览器缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),v("blockquote",[v("p",[t._v("参考"),v("a",{attrs:{href:"https://juejin.im/post/5cf72a93f265da1b7b317875",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存详解"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("service worker")]),t._v(" "),v("li",[t._v("内存(memory cache)")]),t._v(" "),v("li",[t._v("硬盘(disk cache)")]),t._v(" "),v("li",[t._v("push cache")])]),t._v(" "),v("img",{attrs:{src:r(485)}}),t._v(" "),v("h3",{attrs:{id:"详解csrf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#详解csrf"}},[t._v("#")]),t._v(" 详解CSRF")]),t._v(" "),v("p",[t._v("防护方法")]),t._v(" "),v("ol",[v("li",[t._v("二次验证，进行重要敏感操作时，要求用户进行二次验证。")]),t._v(" "),v("li",[t._v("验证码，进行重要敏感操作时，加入验证码。")]),t._v(" "),v("li",[t._v("验证 HTTP 的 Referer 字段。")]),t._v(" "),v("li",[t._v("请求地址中添加 Token 并验证。")]),t._v(" "),v("li",[t._v("HTTP 头中自定义属性并验证。")])]),t._v(" "),v("h3",{attrs:{id:"tcp和udp的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp和udp的区别"}},[t._v("#")]),t._v(" TCP和UDP的区别")])])}),[],!1,null,null,null);e.default=_.exports}}]);