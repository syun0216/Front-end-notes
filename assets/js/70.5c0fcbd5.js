(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{343:function(e,t,r){"use strict";r.r(t);var o=r(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"csrf进阶"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf进阶"}},[e._v("#")]),e._v(" CSRF进阶")]),e._v(" "),r("hr"),e._v(" "),r("ol",[r("li",[e._v("浏览器的cookie策略：浏览器的cookie分为两种：Session Cookie（临时，浏览器关闭后消失），Third-party Cookie 本地cookie（Expire time到期消失）。如果浏览器从一个域的页面中，要加载另外一个域的资源，浏览器会阻止Third-party Cookie的发送。")]),e._v(" "),r("li",[e._v("P3P头的副作用（The Platform for Privacy Preferences）是W3C自定的一项关于隐私的标准")]),e._v(" "),r("li",[e._v("Flash CSRF")]),e._v(" "),r("li",[e._v("CSRF Worm")])]),e._v(" "),r("h3",{attrs:{id:"csrf防御"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf防御"}},[e._v("#")]),e._v(" CSRF防御")]),e._v(" "),r("hr"),e._v(" "),r("ol",[r("li",[e._v("验证码：是被认为对抗CSRF最简洁有效的方法")]),e._v(" "),r("li",[e._v('Reference Check在互联网中最常见的应用就是"防止图片盗链"。同理，Reference Check也可以被用于检查请求是否来自合法的源。Reference Check的缺陷在于服务器并非什么时候都能取得到Referer。但是通过Reference Check来监控CSRF攻击的发生，倒是一种可行的方法。')]),e._v(" "),r("li",[e._v("Anti CSRF Token: CSRF 为什么能够攻击成功？本质原因是重要操作的所有参数都可以被攻击者猜测到。token要足够随机，必须使用足够安全的随机数生成算法。")])]),e._v(" "),r("h3",{attrs:{id:"token的使用原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#token的使用原则"}},[e._v("#")]),e._v(" TOKEN的使用原则")]),e._v(" "),r("hr"),e._v(" "),r("ol",[r("li",[e._v("防御CSRF的token根据不可预测性原则设计方案，所以一定要随机，此外这个token的目的不是为了防止重复提交。所以为了使用方便，可以允许一个用户的有效生命周期内，在token消耗掉前都使用同一个token，使用后则生成一个新的token")])])])}),[],!1,null,null,null);t.default=s.exports}}]);