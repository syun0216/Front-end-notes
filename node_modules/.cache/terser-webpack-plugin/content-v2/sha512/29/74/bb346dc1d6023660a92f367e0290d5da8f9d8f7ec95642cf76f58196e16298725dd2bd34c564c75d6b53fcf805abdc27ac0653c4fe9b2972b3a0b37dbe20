{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{351:function(s,n,e){\"use strict\";e.r(n);var a=e(0),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"如何实现一个event\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何实现一个event\"}},[s._v(\"#\")]),s._v(\" 如何实现一个Event\")]),s._v(\" \"),e(\"h3\",{attrs:{id:\"vue中组件通信\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue中组件通信\"}},[s._v(\"#\")]),s._v(\" Vue中组件通信\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"父子组件用props\")]),s._v(\" \"),e(\"li\",[s._v(\"非父子组件用EventBus\")]),s._v(\" \"),e(\"li\",[s._v(\"vuex\")])]),s._v(\" \"),e(\"h3\",{attrs:{id:\"react中的组件通信\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#react中的组件通信\"}},[s._v(\"#\")]),s._v(\" React中的组件通信\")]),s._v(\" \"),e(\"ul\",[e(\"li\",[s._v(\"父子组件,父->子直接用Props,子->父用callback回调\")]),s._v(\" \"),e(\"li\",[s._v(\"非父子组件,用发布订阅模式的Event模块\")]),s._v(\" \"),e(\"li\",[s._v(\"Redux、Mobx\")]),s._v(\" \"),e(\"li\",[s._v(\"Context api\")])]),s._v(\" \"),e(\"h2\",{attrs:{id:\"基本构造\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本构造\"}},[s._v(\"#\")]),s._v(\" 基本构造\")]),s._v(\" \"),e(\"h3\",{attrs:{id:\"初始化class\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初始化class\"}},[s._v(\"#\")]),s._v(\" 初始化class\")]),s._v(\" \"),e(\"p\",[s._v(\"我们利用ES6的class关键字对Event进行初始化，包括Event时间清单和监听者上限。使用Map来进行存储。\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"class EventEmeitter {\\n  constructor() {\\n    this._events = this._events || new Map(); // 储存事件/回调键值对\\n    this._maxListeners = this._maxListeners || 10; // 设立监听上限\\n  }\\n}\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\")])]),e(\"h3\",{attrs:{id:\"监听与触发\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#监听与触发\"}},[s._v(\"#\")]),s._v(\" 监听与触发\")]),s._v(\" \"),e(\"p\",[s._v(\"参数少时使用call， 参数多时使用apply\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"// 触发名为type的事件\\nEventEmeitter.prototype.emit = function(type, ...args) {\\n  let handler;\\n  //从储存事件键值对的this._events中获取对应事件回调函数\\n  handler = this._events.get(type);\\n  if(args.length > 0) {\\n    handler.apply(this, args);\\n  }else {\\n    handler.call(this);\\n  }\\n  return true;\\n}\\n\\n//监听名为type的事件\\nEventEmeitter.prototype.addListener = function(type, fn) {\\n  //将type时间以及对应的fn函数放入this._events中存储\\n  if(!this._events.get(type)) {\\n    this._events.set(type, fn)\\n  }\\n}\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),e(\"br\")])]),e(\"p\",[s._v(\"我们实现了触发事件的emit方法和监听事件的addListener方法,至此我们就可以进行简单的实践了.\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"// 实例化\\nconst emitter = new EventEmeitter();\\n\\n// 监听一个名为arson的事件对应一个回调函数\\nemitter.addListener('arson', man => {\\n  console.log(`expel ${man}`);\\n});\\n\\n// 我们触发arson事件,发现回调成功执行\\nemitter.emit('arson', 'low-end'); // expel low-end\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\")])]),e(\"h3\",{attrs:{id:\"监听多个事件\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#监听多个事件\"}},[s._v(\"#\")]),s._v(\" 监听多个事件\")]),s._v(\" \"),e(\"p\",[s._v(\"addListener时判断存入数组里\")]),s._v(\" \"),e(\"div\",{staticClass:\"language- line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[s._v(\"EventEmeitter.prototype.emit = function(type, ...args) {\\n  let handler;\\n  handler = this._event.get(type);\\n  if (Array.isArray(handler)) {\\n    // 如果是一个数组说明有多个监听者,需要依次此触发里面的函数\\n    for (let i = 0; i < handler.length; i++) {\\n      if (args.length > 0) {\\n        handler[i].apply(this, args);\\n      } else {\\n        handler[i].call(this);\\n      }\\n    }\\n  } else { // 单个函数的情况我们直接触发即可\\n    if (args.length > 0) {\\n      handler.apply(this, args);\\n    } else {\\n      handler.call(this);\\n    }\\n  }\\n\\n  return true;\\n}\\n\\n// 监听名为type的事件\\nEventEmeitter.prototype.addListener = function(type, fn) {\\n  const handler = this._events.get(type); // 获取对应事件名称的函数清单\\n  if (!handler) {\\n    this._events.set(type, fn);\\n  } else if (handler && typeof handler === 'function') {\\n    // 如果handler是函数说明只有一个监听者\\n    this._events.set(type, [handler, fn]); // 多个监听者我们需要用数组储存\\n  } else {\\n    handler.push(fn); // 已经有多个监听者,那么直接往数组里push函数即可\\n  }\\n};\\n\\nEventEmeitter.prototype.removeListener = function(type, fn) {\\n  const handler = this._events.get(type); // 获取对应事件名称的函数清单\\n\\n  // 如果是函数,说明只被监听了一次\\n  if (handler && typeof handler === 'function') {\\n    this._events.delete(type, fn);\\n  } else {\\n    let postion;\\n    // 如果handler是数组,说明被监听多次要找到对应的函数\\n    for (let i = 0; i < handler.length; i++) {\\n      if (handler[i] === fn) {\\n        postion = i;\\n      } else {\\n        postion = -1;\\n      }\\n    }\\n    // 如果找到匹配的函数,从数组中清除\\n    if (postion !== -1) {\\n      // 找到数组对应的位置,直接清除此回调\\n      handler.splice(postion, 1);\\n      // 如果清除后只有一个函数,那么取消数组,以函数形式保存\\n      if (handler.length === 1) {\\n        this._events.set(type, handler[0]);\\n      }\\n    } else {\\n      return this;\\n    }\\n  }\\n};\\n\\n\")])]),s._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"49\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"50\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"51\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"52\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"53\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"54\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"55\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"56\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"57\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"58\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"59\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"60\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"61\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"62\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"63\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"64\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"65\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[s._v(\"66\")]),e(\"br\")])]),e(\"h2\",{attrs:{id:\"参考\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考\"}},[s._v(\"#\")]),s._v(\" 参考\")]),s._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/xiaomuzhu/front-end-interview/blob/master/docs/guide/event.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://github.com/xiaomuzhu/front-end-interview/blob/master/docs/guide/event.md\"),e(\"OutboundLink\")],1),s._v(\" \"),e(\"a\",{attrs:{href:\"https://github.com/Gozala/events/blob/master/events.js\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://github.com/Gozala/events/blob/master/events.js\"),e(\"OutboundLink\")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);","extractedComments":[]}